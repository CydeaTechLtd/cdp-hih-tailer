### SET FOLDER TO WATCH + FILES TO WATCH + SUBFOLDERS YES/NO
    $filewatcher = New-Object System.IO.FileSystemWatcher
    #Mention the folder to monitor
    $filewatcher.Path = "C:\"
    $filewatcher.Filter = "*.*"
    #include subdirectories $true/$false
    $filewatcher.IncludeSubdirectories = $true
    $filewatcher.EnableRaisingEvents = $true  
 
### DEFINE ACTIONS AFTER AN EVENT IS DETECTED
    $writeaction = { $path = $Event.SourceEventArgs.FullPath
$changeType = $Event.SourceEventArgs.ChangeType
$login = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
$logline = "$(Get-Date), $changeType, $path, $login"
Write-Host ("$logline")
Out-File -Append  -InputObject $logline -FilePath "C:\Users\ijlal\Downloads\cdp-hih-tailer\FileWatcher_Log.txt" -Encoding ASCII
#Add-content "C:\Users\test\FileWatcher_log.txt" -value $logline
#Write-Host ("$logline")
}  
### DECIDE WHICH EVENTS SHOULD BE WATCHED 
 
#The Register-ObjectEvent cmdlet subscribes to events that are generated by .NET objects on the local computer or on a remote computer.
#When the subscribed event is raised, it is added to the event queue in your session. To get events in the event queue, use the Get-Event cmdlet.
    Register-ObjectEvent $filewatcher "Created" -Action $writeaction
    Register-ObjectEvent $filewatcher "Changed" -Action $writeaction
    Register-ObjectEvent $filewatcher "Deleted" -Action $writeaction
    Register-ObjectEvent $filewatcher "Renamed" -Action $writeaction
    while ($true) {sleep 5}
  <#   [Environment]::SetEnvironmentVariable("organization","9c663c60-150a-468d-aa72-54778049a177","Machine")
log.update({"organization": obj['organization']})
organization= str(os.environ['organization'])
        obj["organization"]=organization
        def get_config():
    try:
        obj={"siem":"","port":"","logs_file_path": "","certificate_path":"","certificate_password": "","sysmon_logs": "","server_address": "","organization":""}
        siem=str(os.environ['SIEM'])
        port = os.environ['SIEM_PORT']
        file_path= str(os.environ['EVTX_LOGS_PATH'])
        certificate_path= str(os.environ['CERTIFICATE_PATH'])
        certificate_password= str(os.environ['CERTIFICATE_PASSWORD'])
        sysmon_logs= str(os.environ['SYSMON_LOG_FILE'])
        server_address= str(os.environ['SERVER_ADDRESS'])
        organization= str(os.environ['organization'])

        obj["siem"] = siem
        obj["port"] = port
        obj["logs_file_path"]=file_path
        obj["certificate_path"]=certificate_path
        obj["certificate_password"]=certificate_password
        obj["sysmon_logs"]=sysmon_logs
        obj["server_address"]=server_address
        obj["organization"]=organization

        print(obj)
        return obj
    except Exception as e:
      logging.error("Error ", e)
 #>